From: Carlos Garnacho <carlosg@gnome.org>
Date: Wed, 15 Apr 2020 10:46:34 +0200
Subject: x11: Do not trust there is task in error paths

Flushing the X11 selection output stream may happen synchronously or
implicitly, in which case there is not a task to complete. Check there
is actually a task before returning errors. We additionally set the
pipe_error flag, so future operations will fail with an error, albeit
with a more generic message.

https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1198

(cherry picked from commit 1909977a6787d6e06d4931df158b821f6fb35ad1)

Origin: upstream, 3.36.2
---
 src/x11/meta-x11-selection-output-stream.c | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/x11/meta-x11-selection-output-stream.c b/src/x11/meta-x11-selection-output-stream.c
index 3ba05ab..41a691c 100644
--- a/src/x11/meta-x11-selection-output-stream.c
+++ b/src/x11/meta-x11-selection-output-stream.c
@@ -282,13 +282,16 @@ meta_x11_selection_output_stream_perform_flush (MetaX11SelectionOutputStream *st
       priv->delete_pending = FALSE;
       priv->pipe_error = TRUE;
 
-      XGetErrorText (xdisplay, error_code, error_str, sizeof (error_str));
-      g_task_return_new_error (priv->pending_task,
-                               G_IO_ERROR,
-                               G_IO_ERROR_BROKEN_PIPE,
-                               "Failed to flush selection output stream: %s",
-                               error_str);
-      g_clear_object (&priv->pending_task);
+      if (priv->pending_task)
+        {
+          XGetErrorText (xdisplay, error_code, error_str, sizeof (error_str));
+          g_task_return_new_error (priv->pending_task,
+                                   G_IO_ERROR,
+                                   G_IO_ERROR_BROKEN_PIPE,
+                                   "Failed to flush selection output stream: %s",
+                                   error_str);
+          g_clear_object (&priv->pending_task);
+        }
     }
   else if (priv->pending_task && priv->data->len == 0 && !priv->delete_pending)
     {
