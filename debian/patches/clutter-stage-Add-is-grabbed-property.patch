From: =?utf-8?q?Jonas_=C3=85dahl?= <jadahl@gmail.com>
Date: Wed, 16 Aug 2023 00:08:31 +0200
Subject: clutter/stage: Add is-grabbed property

Forwarded: https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/3195
Applied-upstream: 43.8, commit:a3d67b0a5ef79f5bff599e8b82ea08d68f47155d
---
 clutter/clutter/clutter-stage.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/clutter/clutter/clutter-stage.c b/clutter/clutter/clutter-stage.c
index 7d24cf4..84ae7fc 100644
--- a/clutter/clutter/clutter-stage.c
+++ b/clutter/clutter/clutter-stage.c
@@ -152,6 +152,8 @@ enum
   PROP_PERSPECTIVE,
   PROP_TITLE,
   PROP_KEY_FOCUS,
+  PROP_IS_GRABBED,
+
   PROP_LAST
 };
 
@@ -1175,6 +1177,10 @@ clutter_stage_get_property (GObject    *gobject,
       g_value_set_object (value, priv->key_focused_actor);
       break;
 
+    case PROP_IS_GRABBED:
+      g_value_set_boolean (value, !!priv->topmost_grab);
+      break;
+
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (gobject, prop_id, pspec);
       break;
@@ -1363,6 +1369,17 @@ clutter_stage_class_init (ClutterStageClass *klass)
                            CLUTTER_PARAM_READWRITE |
                            G_PARAM_EXPLICIT_NOTIFY);
 
+  /**
+   * ClutterStage:is-grabbed:
+   *
+   * %TRUE if there is currently an active grab on the stage.
+   */
+  obj_props[PROP_IS_GRABBED] =
+      g_param_spec_boolean ("is-grabbed", NULL, NULL,
+                            FALSE,
+                            CLUTTER_PARAM_READABLE |
+                            G_PARAM_EXPLICIT_NOTIFY);
+
   g_object_class_install_properties (gobject_class, PROP_LAST, obj_props);
 
   /**
@@ -3787,6 +3804,7 @@ clutter_stage_grab (ClutterStage *stage,
 {
   ClutterStagePrivate *priv;
   ClutterGrab *grab;
+  gboolean was_grabbed;
 
   g_return_val_if_fail (CLUTTER_IS_STAGE (stage), NULL);
   g_return_val_if_fail (CLUTTER_IS_ACTOR (actor), NULL);
@@ -3815,6 +3833,8 @@ clutter_stage_grab (ClutterStage *stage,
   grab->prev = NULL;
   grab->next = priv->topmost_grab;
 
+  was_grabbed = !!priv->topmost_grab;
+
   if (priv->topmost_grab)
     priv->topmost_grab->prev = grab;
 
@@ -3822,6 +3842,9 @@ clutter_stage_grab (ClutterStage *stage,
   clutter_actor_attach_grab (actor, grab);
   clutter_stage_notify_grab (stage, grab, grab->next);
 
+  if (was_grabbed != !!priv->topmost_grab)
+    g_object_notify_by_pspec (G_OBJECT (stage), obj_props[PROP_IS_GRABBED]);
+
   return grab;
 }
 
@@ -3831,6 +3854,7 @@ clutter_stage_unlink_grab (ClutterStage *stage,
 {
   ClutterStagePrivate *priv = stage->priv;
   ClutterGrab *prev, *next;
+  gboolean was_grabbed;
 
   /* This grab is already detached */
   if (!grab->prev && !grab->next && priv->topmost_grab != grab)
@@ -3844,6 +3868,8 @@ clutter_stage_unlink_grab (ClutterStage *stage,
   if (next)
     next->prev = prev;
 
+  was_grabbed = !!priv->topmost_grab;
+
   if (priv->topmost_grab == grab)
     {
       /* This is the active grab */
@@ -3866,6 +3892,9 @@ clutter_stage_unlink_grab (ClutterStage *stage,
       priv->grab_state = CLUTTER_GRAB_STATE_NONE;
     }
 
+  if (was_grabbed != !!priv->topmost_grab)
+    g_object_notify_by_pspec (G_OBJECT (stage), obj_props[PROP_IS_GRABBED]);
+
   grab->next = NULL;
   grab->prev = NULL;
 }
